<?php/** * @file * Contains all schema install and update hooks. *//** * Sets configuration variables for email domain mxr validate settings. */function email_domain_mxr_validate_enable() {  // Set error message variable.  if (module_exists('i18n_variable')) {    $languages = language_list();    foreach ($languages as $language) {      if (!empty($language->language)) {        i18n_variable_set('email_domain_mxr_validate_error_message', EMAIL_DOMAIN_MXR_VALIDATE_DEFAULT_ERROR_MESSAGE, $language->language);      }    }  }  else {    variable_set('email_domain_mxr_validate_error_message', EMAIL_DOMAIN_MXR_VALIDATE_DEFAULT_ERROR_MESSAGE);  }  // Default module variables.  variable_set('email_domain_mxr_validate_fail_entity_creation', FALSE);  variable_set('email_domain_mxr_validate_report_path', EMAIL_DOMAIN_MXR_VALIDATE_DEFAULT_REPORTING_VIEW_PATH);  variable_set('email_domain_mxr_validate_allowed_domains', array());}/** * Implements hook_uninstall(). */function email_domain_mxr_validate_disable() {  // Delete error message variable.  if (module_exists('i18n_variable')) {    $languages = language_list();    foreach ($languages as $language) {      if (!empty($language->language)) {        i18n_variable_del('email_domain_mxr_validate_error_message', $language->language);      }    }  }  else {    variable_del('email_domain_mxr_validate_error_message');  }  // Remove module variables.  variable_del('email_domain_mxr_validate_fail_entity_creation');  variable_del('email_domain_mxr_validate_report_path');  variable_del('email_domain_mxr_validate_allowed_domains');  cache_clear_all('email_domain_mxr_validate_cached_domains', 'cache_email_domain_mxr_validate');}/** * Implements hook_schema(). */function email_domain_mxr_validate_schema() {  $schema = array();  $schema['email_domain_mxr_validate_fail'] = array(    'description' => 'The table containing email domain mxr validation fails.',    'fields' => array(      'id' => array(        'description' => 'The primary identifier.',        'type' => 'serial',        'unsigned' => TRUE,        'not null' => TRUE,      ),      'email_address' => array(        'description' => 'The offending email address',        'type' => 'varchar',        'length' => 255,        'not null' => TRUE,      ),      'timestamp' => array(        'description' => 'Time that the failure was generated',        'type' => 'int',        'default' => 0,        'not null' => TRUE,      ),      'uid' => array(        'description' => 'The UID of the user making the form submission',        'type' => 'int',        'default' => NULL,      ),      'form_id' => array(        'description' => 'The offending form id',        'type' => 'varchar',        'length' => 255,        'not null' => TRUE,        'default' => '',      ),    ),    'indexes' => array(      'uid' => array('uid'),    ),    'primary key' => array('id'),    'foreign keys' => array(      'uid' => array(        'table' => 'users',        'columns' => array('uid' => 'uid'),      ),    ),  );  $schema['cache_email_domain_mxr_validate'] = drupal_get_schema_unprocessed('system', 'cache');  return $schema;}